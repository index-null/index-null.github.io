<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>鸡尾酒指南</title>
      <link href="/chushing/2024/08/24/%E9%B8%A1%E5%B0%BE%E9%85%92%E6%8C%87%E5%8D%97/"/>
      <url>/chushing/2024/08/24/%E9%B8%A1%E5%B0%BE%E9%85%92%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Spirit"><a href="#Spirit" class="headerlink" title="Spirit"></a>Spirit</h1><ol><li><h5 id="琴酒-Gin"><a href="#琴酒-Gin" class="headerlink" title="琴酒 (Gin)"></a><strong>琴酒 (Gin)</strong></h5><ul><li><strong>原料</strong>：琴酒主要以<mark class="hl-label blue">谷物</mark> 为基底，如小麦或大麦，经过蒸馏后加入<mark class="hl-label green">杜松子</mark> （juniper berries）和其他香料调味。</li><li><strong>最大特点</strong>：琴酒的标志性风味来自于杜松子，它赋予了琴酒<mark class="hl-label pink">清新而略带苦味</mark> 的特点。此外，不同的琴酒品牌还会加入其他草本植物和香料，如柑橘皮、芫荽籽、肉桂等，以增加层次感和复杂性。</li></ul></li><li><h5 id="伏特加-Vodka"><a href="#伏特加-Vodka" class="headerlink" title="伏特加 (Vodka)"></a><strong>伏特加 (Vodka)</strong></h5><ul><li><strong>原料</strong>：伏特加通常以<mark class="hl-label blue">谷物</mark> （如小麦、大麦或玉米）或<mark class="hl-label red">马铃薯</mark> 为原料，经过多次蒸馏制成。</li><li><strong>最大特点</strong>：伏特加以其<mark class="hl-label purple">纯净无色、无味和无臭</mark> 的特点而闻名，这使得它成为许多鸡尾酒的理想基酒，因为它<mark class="hl-label yellow">不会掩盖其他成分的味道</mark> 。</li></ul></li><li><h6 id="朗姆酒-Rum"><a href="#朗姆酒-Rum" class="headerlink" title="朗姆酒 (Rum)"></a><strong>朗姆酒 (Rum)</strong></h6><ul><li><strong>原料</strong>：朗姆酒是以<mark class="hl-label pink">甘蔗</mark> 糖蜜或新鲜甘蔗汁为原料，经过发酵和蒸馏制成。</li><li><strong>最大特点</strong>：朗姆酒的风味因其产地和生产工艺的不同而有很大差异。它可以是清淡的、中等的或是浓郁的，有的带有果香，有的则更偏向于焦糖和香草的味道。</li></ul></li><li><h5 id="威士忌-Whiskey"><a href="#威士忌-Whiskey" class="headerlink" title="威士忌 (Whiskey)"></a><strong>威士忌 (Whiskey)</strong></h5><ul><li><strong>原料</strong>：威士忌通常以谷物（如大麦、玉米、黑麦、小麦等）为原料，经过发酵、蒸馏并在<mark class="hl-label brown">橡木桶中陈酿</mark> 。</li><li><strong>最大特点</strong>：威士忌的风味因产地、谷物种类和陈酿时间的不同而有所区别。比如<mark class="hl-label darkblue">苏格兰威士忌通常带有烟熏味</mark> ，而美国波本威士忌则更偏向于甜美的香草和焦糖味道。</li></ul></li><li><h5 id="龙舌兰酒-Tequila"><a href="#龙舌兰酒-Tequila" class="headerlink" title="龙舌兰酒 (Tequila)"></a><strong>龙舌兰酒 (Tequila)</strong></h5><ul><li><strong>原料</strong>：龙舌兰酒是由<mark class="hl-label teal">蓝龙舌兰</mark> （Blue Agave）植物的心部（称为piña）经过发酵和蒸馏制成。</li><li><strong>最大特点</strong>：龙舌兰酒根据陈酿时间的不同分为银色（Silver）、金色（Reposado）和陈年（Añejo）等类型。它通常具有独特的<mark class="hl-label lightgreen">草本和植物香气</mark> ，有时还带有轻微的烟熏味。</li></ul></li><li><h5 id="白兰地-Brandy"><a href="#白兰地-Brandy" class="headerlink" title="白兰地 (Brandy)"></a><strong>白兰地 (Brandy)</strong></h5><ul><li><strong>原料</strong>：白兰地主要是以<mark class="hl-label cyan">水果（尤其是葡萄）</mark> 为原料，经过发酵、蒸馏和在橡木桶中陈酿。</li><li><strong>最大特点</strong>：白兰地的风味因其原料水果和陈酿时间的不同而有所变化。<mark class="hl-label lightblue">干邑（Cognac）</mark> 是最著名的类型之一，以其复杂的香气和口感而闻名，通常带有木质、果香和香草的味道。</li></ul></li></ol><hr><h1 id="Classical-cocktails"><a href="#Classical-cocktails" class="headerlink" title="Classical cocktails"></a>Classical cocktails</h1><ol><li><mark class="hl-label (Gin)">琴酒</mark> <ul><li><strong>经典鸡尾酒</strong>：<ul><li><mark class="hl-label (Martini)">马天尼</mark> ：经典的干马天尼由琴酒和少量<mark class="hl-label green">干味美思</mark> （Dry Vermouth）组成，通常会加入橄榄或柠檬皮作为装饰。它是优雅和简洁的代表。</li><li>**吉姆雷特 (Gimlet)**：由琴酒和青柠汁混合而成，简单而清新，常用于夏季饮用。</li><li>**汤姆柯林斯 (Tom Collins)**：以琴酒为基础，加上柠檬汁、糖浆和苏打水，是一款清爽的长饮鸡尾酒。</li></ul></li></ul></li><li><mark class="hl-label (Vodka)">伏特加</mark> <ul><li><strong>经典鸡尾酒</strong>：<ul><li><mark class="hl-label (Screwdriver)">螺丝起子</mark> ：由<mark class="hl-label green">伏特加和橙汁</mark> 组成，简单易做，味道鲜美。</li><li>**莫斯科骡子 (Moscow Mule)**：伏特加、姜啤酒和酸橙汁的组合，通常用铜杯盛装，口感辛辣。</li><li><mark class="hl-label (Bloody">血腥玛丽</mark> ：由伏特加、<mark class="hl-label green">番茄汁、辣酱油</mark> 和其他调料调制而成，是<mark class="hl-label blue">早餐或宿醉</mark> 后的理想选择。</li></ul></li></ul></li><li><mark class="hl-label (Rum)">朗姆酒</mark> <ul><li><strong>经典鸡尾酒</strong>：<ul><li><mark class="hl-label (Mojito)">莫吉托</mark> ：以白朗姆酒为基础，加入薄荷叶、青柠汁、糖浆和苏打水，是一款清新且充满热带风情的鸡尾酒。</li><li>**戴基里 (Daiquiri)**：由白朗姆酒、青柠汁和糖浆调制而成，口感酸甜适中。</li><li>**海盗船长 (Captain Morgan’s Spiced Rum Punch)**：虽然不是传统意义上的经典鸡尾酒，但这款由香料朗姆酒和果汁调制的饮料深受喜爱。</li></ul></li></ul></li><li><p><strong>威士忌 (Whiskey)</strong></p><ul><li><strong>经典鸡尾酒</strong>：<ul><li><mark class="hl-label (Manhattan)">曼哈顿</mark> ：由波本威士忌或加拿大威士忌、甜味美思和苦精调制而成，是一款口感浓郁的鸡尾酒。</li><li><mark class="hl-label (Old">老式</mark> ：以波本威士忌为基础，加入糖、苦精和橙皮，是一款经典的短饮鸡尾酒。</li><li>**波旁甜茶 (Bourbon Sweet Tea)**：虽然不是传统的鸡尾酒，但这种以波旁威士忌和甜茶混合而成的饮品在美国南部非常受欢迎。</li></ul></li></ul></li><li><p><strong>龙舌兰酒 (Tequila)</strong></p><ul><li><strong>经典鸡尾酒</strong>：<ul><li><mark class="hl-label (Margarita)">玛格丽塔</mark> ：由龙舌兰酒、酸橙汁和三重奏（Triple Sec）调制而成，通常会在<mark class="hl-label green">杯缘撒上盐</mark> ，是一款标志性的鸡尾酒。</li><li><mark class="hl-label (Paloma)">帕洛玛</mark> ：以龙舌兰酒为基础，加入葡萄柚汁和苏打水，口感清新。</li><li><mark class="hl-label (Tequila">龙舌兰日出</mark> ：由龙舌兰酒、橙汁和石榴糖浆组成，呈现出<mark class="hl-label green">美丽的渐变色</mark> 。</li></ul></li></ul></li><li><p><strong>白兰地 (Brandy)</strong></p><ul><li><strong>经典鸡尾酒</strong>：<ul><li>**桑格利亚 (Sangria)**：虽然通常被认为是红酒为基础的饮品，但也有以白兰地为基酒的版本，加入水果、红酒和碳酸水。</li><li><mark class="hl-label (Sidecar)">侧车</mark> ：由白兰地、三重奏（Triple Sec）和柠檬汁调制而成，是一款酸甜平衡的鸡尾酒。</li><li><mark class="hl-label (Brandy">白兰地亚历山大</mark> ：由白兰地、<mark class="hl-label green">白巧克力利口酒和奶油</mark> 调制而成，是一款顺滑而丰富的鸡尾酒。</li></ul></li></ul></li></ol><hr><h1 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h1><h3 id="1-Old-Fashioned-古典"><a href="#1-Old-Fashioned-古典" class="headerlink" title="1. Old Fashioned 古典"></a>1. Old Fashioned 古典</h3><ul><li><strong>组成</strong>：烈酒 + 糖 + 苦精</li><li><strong>示例</strong>：<ul><li><mark class="hl-label Fashioned">Old</mark> ：波本威士忌或加拿大威士忌、糖、苦精。</li><li><mark class="hl-label (Sazerac)">萨泽拉克</mark> ：通常是用波本威士忌或黑麦威士忌、苦精、糖浆、橙皮。</li><li><mark class="hl-label (Mint">薄荷茱利普</mark> ：波本威士忌、糖、薄荷叶、碎冰。</li></ul></li></ul><h3 id="2-Highball"><a href="#2-Highball" class="headerlink" title="2. Highball"></a>2. Highball</h3><ul><li><strong>组成</strong>：烈酒 + 两份长饮成分（如苏打水、柠檬汽水、果汁等）</li><li><strong>示例</strong>：<ul><li><mark class="hl-label (Gin">金汤力</mark> ：琴酒 + 吨尼克水。</li><li><mark class="hl-label (Paloma)">帕洛玛</mark> ：龙舌兰酒 + 葡萄柚汁 + 苏打水。</li><li><mark class="hl-label (Cuba">自由古巴</mark> ：朗姆酒 + 可乐 + 酸橙汁。</li><li><mark class="hl-label purple">大多数便利店调酒</mark> ：这类饮品通常是简单的烈酒与软饮料的组合。</li></ul></li></ul><h3 id="3-Daiquiri-大吉利"><a href="#3-Daiquiri-大吉利" class="headerlink" title="3. Daiquiri 大吉利"></a>3. Daiquiri 大吉利</h3><ul><li><strong>组成</strong>：烈酒 + 柑橘酸（如柠檬汁或酸橙汁）+ 糖浆</li><li><strong>示例</strong>：<ul><li><mark class="hl-label pink">Gimlet</mark> ：琴酒 + 酸橙汁 + 糖浆。</li><li><mark class="hl-label (Whiskey">威士忌酸</mark> ：威士忌 + 柠檬汁 + 糖浆。</li><li><mark class="hl-label 类">Fizz</mark> ：这类鸡尾酒通常包含烈酒、柑橘酸、糖浆和苏打水。</li></ul></li></ul><h3 id="4-Side-Car-边车"><a href="#4-Side-Car-边车" class="headerlink" title="4. Side Car 边车"></a>4. Side Car 边车</h3><ul><li><strong>组成</strong>：烈酒 + 柑橘酸 + 利口酒</li><li><strong>示例</strong>：<ul><li><mark class="hl-label Lady">White</mark> ：琴酒 + 柠檬汁 + 三重奏（Triple Sec）。</li><li><mark class="hl-label (Margarita)">玛格丽塔</mark> ：龙舌兰酒 + 酸橙汁 + 三重奏（Triple Sec）。</li></ul></li></ul><h3 id="5-Martini-马天尼"><a href="#5-Martini-马天尼" class="headerlink" title="5. Martini 马天尼"></a>5. Martini 马天尼</h3><ul><li><strong>组成</strong>：烈酒 + 加香葡萄酒（如味美思）</li><li><strong>示例</strong>：<ul><li><mark class="hl-label (Manhattan)">曼哈顿</mark> ：波本威士忌或加拿大威士忌 + 甜味美思 + 苦精。</li><li><mark class="hl-label Roy">Rob</mark> ：苏格兰威士忌 + 甜味美思 + 苦精。</li><li><mark class="hl-label green">Vesper</mark> ：琴酒 + 伏特加 + 干味美思。</li><li><mark class="hl-label purple">Negroni</mark> ：琴酒 + 甜味美思 + 苦艾酒。</li></ul></li></ul><h3 id="6-Flip"><a href="#6-Flip" class="headerlink" title="6. Flip"></a>6. Flip</h3><ul><li><strong>组成</strong>：烈酒 + 蛋&#x2F;奶 + 糖</li><li><strong>示例</strong>：<ul><li><mark class="hl-label (Alexander)">亚历山大</mark> ：白兰地或干邑 + 白巧克力利口酒 + 奶油。</li><li><mark class="hl-label (White">白俄罗斯</mark> ：伏特加 + 咖啡利口酒 + 奶油。</li></ul></li></ul><hr><h1 id="Picking-Flowchart"><a href="#Picking-Flowchart" class="headerlink" title="Picking Flowchart"></a>Picking Flowchart</h1><h2 id="第一步：口味偏好"><a href="#第一步：口味偏好" class="headerlink" title="第一步：口味偏好"></a>第一步：口味偏好</h2><h3 id="甜味"><a href="#甜味" class="headerlink" title="甜味"></a>甜味</h3><ul><li><strong>酒精浓度偏好</strong><ul><li><strong>高</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>戴基里 (Daiquiri)</strong></li><li><strong>草本风味</strong> → <strong>海盗船长 (Captain Morgan’s Spiced Rum Punch)</strong></li><li><strong>香料风味</strong> → <strong>白兰地亚历山大 (Brandy Alexander)</strong></li></ul></li></ul></li><li><strong>低</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>莫吉托 (Mojito)</strong></li><li><strong>草本风味</strong> → <strong>吉姆雷特 (Gimlet)</strong></li><li><strong>香料风味</strong> → <strong>侧车 (Sidecar)</strong></li></ul></li></ul></li></ul></li></ul><h3 id="酸味"><a href="#酸味" class="headerlink" title="酸味"></a>酸味</h3><ul><li><strong>酒精浓度偏好</strong><ul><li><strong>高</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>玛格丽塔 (Margarita)</strong></li><li><strong>草本风味</strong> → <strong>汤姆柯林斯 (Tom Collins)</strong></li><li><strong>香料风味</strong> → <strong>曼哈顿 (Manhattan)</strong></li></ul></li></ul></li><li><strong>低</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>帕洛玛 (Paloma)</strong></li><li><strong>草本风味</strong> → <strong>莫斯科骡子 (Moscow Mule)</strong></li><li><strong>香料风味</strong> → <strong>老式 (Old Fashioned)</strong></li></ul></li></ul></li></ul></li></ul><h3 id="苦味"><a href="#苦味" class="headerlink" title="苦味"></a>苦味</h3><ul><li><strong>酒精浓度偏好</strong><ul><li><strong>高</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>桑格利亚 (Sangria)</strong></li><li><strong>草本风味</strong> → <strong>马天尼 (Martini)</strong></li><li><strong>香料风味</strong> → <strong>波旁甜茶 (Bourbon Sweet Tea)</strong></li></ul></li></ul></li><li><strong>低</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>螺丝起子 (Screwdriver)</strong></li><li><strong>草本风味</strong> → <strong>血腥玛丽 (Bloody Mary)</strong></li><li><strong>香料风味</strong> → <strong>龙舌兰日出 (Tequila Sunrise)</strong></li></ul></li></ul></li></ul></li></ul><h3 id="清爽"><a href="#清爽" class="headerlink" title="清爽"></a>清爽</h3><ul><li><strong>酒精浓度偏好</strong><ul><li><strong>高</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>戴基里 (Daiquiri)</strong></li><li><strong>草本风味</strong> → <strong>莫吉托 (Mojito)</strong></li><li><strong>香料风味</strong> → <strong>玛格丽塔 (Margarita)</strong></li></ul></li></ul></li><li><strong>低</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>帕洛玛 (Paloma)</strong></li><li><strong>草本风味</strong> → <strong>吉姆雷特 (Gimlet)</strong></li><li><strong>香料风味</strong> → <strong>莫斯科骡子 (Moscow Mule)</strong></li></ul></li></ul></li></ul></li></ul><h3 id="浓郁"><a href="#浓郁" class="headerlink" title="浓郁"></a>浓郁</h3><ul><li><strong>酒精浓度偏好</strong><ul><li><strong>高</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>桑格利亚 (Sangria)</strong></li><li><strong>草本风味</strong> → <strong>曼哈顿 (Manhattan)</strong></li><li><strong>香料风味</strong> → <strong>波旁甜茶 (Bourbon Sweet Tea)</strong></li></ul></li></ul></li><li><strong>低</strong><ul><li><strong>风味偏好</strong><ul><li><strong>水果风味</strong> → <strong>螺丝起子 (Screwdriver)</strong></li><li><strong>草本风味</strong> → <strong>血腥玛丽 (Bloody Mary)</strong></li><li><strong>香料风味</strong> → <strong>龙舌兰日出 (Tequila Sunrise)</strong></li></ul></li></ul></li></ul></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Life Musing </category>
          
          <category> Cocktails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cocktails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客教程(基础篇)</title>
      <link href="/chushing/2024/08/21/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/chushing/2024/08/21/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><blockquote><p>本教程主要介绍在windows系统下如何配置wsl,并在其中配置Node.js环境,使用Hexo框架搭建简单的个人博客，最后使用Markdown进行博客文章的编写并部署到github-pages上。</p></blockquote><h2 id="概念理清"><a href="#概念理清" class="headerlink" title="概念理清"></a>概念理清</h2><blockquote><p>在正式开始之前,我们先简单了解一下我们搭建博客过程中需要使用到的重要概念,以下是比较形象的理解,非准确定义,供参考:</p></blockquote><ol><li><p><strong>WSL (Windows Subsystem for Linux):</strong> WSL让 Windows 用户无需虚拟机或双系统，就能直接在 Windows 中运行原生的 Linux 命令行工具和应用程序。</p></li><li><p><strong>node.js</strong>:JavaScript的服务端运行环境, 让JavaScript跳出浏览器的束缚，在服务器上构建高效、可扩展的应用程序(可以简单理解为给hexo框架的运行提供了必须的环境)。</p></li><li><p><strong>npm (Node Package Manager)</strong>:npm 就像是 Node.js 的仓库管理员，负责维护着数以百万计的 JavaScript 库和工具包，使得开发者能够方便地查找、安装并管理这些工具。</p></li><li><p><strong>Markdown</strong>: 一种简洁的文字格式化语法，将纯文本转化为结构清晰、易于阅读的网页内容。</p></li><li><p><strong>GitHub Pages</strong>:允许用户将自己的项目文档或个人网站公开展示出来(其实就是白嫖github的服务器来部署你的网站到互联网,这样别人才能看到)。</p></li><li><p><strong>Hexo</strong>: 快速搭建个人博客或网站的现成框架，它能够高效地将 Markdown 写作的内容转换成静态网页，并轻松部署到 GitHub Pages 或其他服务器上。(别人集成好的专门用来写博客的框架,不需要自己实现网页的从0开始编写,而是从更封装,更抽象的角度来控制你的博客)</p></li></ol><h1 id="环境配置与框架安装"><a href="#环境配置与框架安装" class="headerlink" title="环境配置与框架安装"></a>环境配置与框架安装</h1><ol><li><p>安装wsl子系统:</p><blockquote><p>参考:<a href="https://zhuanlan.zhihu.com/p/693938916">安装Linux子系统（WSL）并连接到vscode - 知乎</a>,后续的操作推荐直接在vscode的终端中完成,便于文件编辑和博客撰写,适合不熟悉Vim等工具的小伙伴</p></blockquote><p><img src="https://chuhsing-blog-bucket.oss-cn-shenzhen.aliyuncs.com/chuhsing/202408220926298.png" alt="image-20240822092639258"></p></li><li><p>安装git:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt upgrade</span><br><span class="line"><span class="built_in">sudo</span> apt install git</span><br></pre></td></tr></table></figure><blockquote><p> 完成后可以配置ssh-key便于后续hexo主题克隆,网站部署等操作,具体参照:<a href="https://zhuanlan.zhihu.com/p/710257608">SSH Key生成 - 知乎</a>,完成后测试连通性如下</p></blockquote><p><img src="https://chuhsing-blog-bucket.oss-cn-shenzhen.aliyuncs.com/chuhsing/202408220928920.png" alt="image-20240822092802881"></p></li><li><p>安装Node.js环境</p><blockquote><p>访问Node.js官网:<a href="https://nodejs.org/zh-cn/download/package-manager">Node.js</a>完成环境安装,以下是官网参考安装代码,具体请自行在官网复制</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># layouts.download.codeBox.installsNvm</span></span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># layouts.download.codeBox.downloadAndInstallNodejsRestartTerminal</span></span><br><span class="line">nvm install 20</span><br><span class="line"></span><br><span class="line"><span class="comment"># layouts.download.codeBox.verifiesRightNodejsVersion</span></span><br><span class="line">node -v <span class="comment"># layouts.download.codeBox.shouldPrint</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># layouts.download.codeBox.verifiesRightNpmVersion</span></span><br><span class="line">npm -v <span class="comment"># layouts.download.codeBox.shouldPrint</span></span><br></pre></td></tr></table></figure></li><li><p>使用npm安装hexo框架:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>使用hexo生成本地博客站点</p><blockquote><p> 按照如下顺序执行:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make a new directory</span></span><br><span class="line"><span class="built_in">mkdir</span> myblog</span><br><span class="line"><span class="comment"># change directory</span></span><br><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line"><span class="comment"># initialize your blog folder</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># clean former generated files</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># generate your new website</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># run your website locally</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>本地访问</p><blockquote><p>浏览器访问本地的4000端口<a href="http://localhost:4000/">http://localhost:4000</a>,即可看到一个默认的博客界面</p></blockquote></li></ol><h1 id="博客的远程部署"><a href="#博客的远程部署" class="headerlink" title="博客的远程部署"></a>博客的远程部署</h1><ol><li><p>仓库创建</p><blockquote><p>首先要在github上创建一个跟自己用户名相同的后缀为.github.io的仓库，注意这里必须要与用户名相同。例如我的github名为index-null,则对应的仓库名字为<code>index-null.github.io</code></p></blockquote><p><img src="https://chuhsing-blog-bucket.oss-cn-shenzhen.aliyuncs.com/chuhsing/202408220953742.png" alt="repository"></p></li><li><p>安装远程部署工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>配置插件</p><blockquote><p>在路径为&#x2F;myblog&#x2F;_config.yml的配置文件中填写之前创建的github仓库信息,具体分支名可自行创建与修改</p></blockquote><p><img src="https://chuhsing-blog-bucket.oss-cn-shenzhen.aliyuncs.com/chuhsing/202408221004728.png" alt="image-20240822100441706"></p></li><li><p>完成正式部署</p><blockquote><p>在完成仓库身份验证后,以下命令会自动将生成的站点上传部署到github-pages中</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>查看部署效果</p><blockquote><p>访问github-pages提供的域名(github账号名.github.io&#x2F;)即可!</p></blockquote></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在本基础篇教程中，我们成功地在Windows系统上通过WSL安装了Node.js和Hexo，搭建了一个简单的个人博客，并将其部署到了GitHub Pages。这个过程涵盖了从环境搭建到内容发布的全部基础步骤，为个人博客的优化和维护打下了基础。</p><p>接下来的进阶教程将带领大家深入探索博客的个性化和优化。我们将会学习如何撰写和编辑高质量的Markdown文章，美化博客界面，选择和定制Hexo主题，以及利用各种插件来增强博客功能。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
            <tag> wsl </tag>
            
            <tag> markdown </tag>
            
            <tag> blog </tag>
            
            <tag> node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git多人协作开发流程(Feature-branch)</title>
      <link href="/chushing/2024/07/20/Git%E5%A4%9A%E4%BA%BA%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"/>
      <url>/chushing/2024/07/20/Git%E5%A4%9A%E4%BA%BA%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Git多人协作开发流程"><a href="#Git多人协作开发流程" class="headerlink" title="Git多人协作开发流程"></a>Git多人协作开发流程</h1><h2 id="1-克隆远程仓库"><a href="#1-克隆远程仓库" class="headerlink" title="1. 克隆远程仓库"></a>1. 克隆远程仓库</h2><p>首先，每个开发者需要从远程仓库克隆项目到本地。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;远程仓库URL&gt;</span><br></pre></td></tr></table></figure><p>具体的步骤可以参考<a href="https://help.github.com/articles/cloning-a-repository/">GitHub帮助文档-Cloning a repository</a>。</p><blockquote><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>从GitHub克隆仓库，配置SSH公钥通常是一个很好的实践。具体可以参考<a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/">GitHub SSH公钥配置</a>。</p><p>远程分支在本地,通常是以<code>origin/branch-name</code>的形式表示。它的作用只是<strong>指示远程分支的开发进度</strong>,并不会干扰本地分支。<br>实际上只有在远程仓库上创建了分支，或者将本地分支push到了远程仓库,才会有远程分支。</p></blockquote><h2 id="2-创建并切换分支"><a href="#2-创建并切换分支" class="headerlink" title="2. 创建并切换分支"></a>2. 创建并切换分支</h2><p>为避免直接在主分支上工作，每个开发者应创建自己的特性分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b feature-branch</span><br></pre></td></tr></table></figure><p>上述命令会创建一个名为<code>feature-branch</code>的新分支，并立即切换到该分支。如果只是创建一个新分支，不切换到该分支，可使用<code>git branch feature-branch</code>。</p><h2 id="3-开发与提交"><a href="#3-开发与提交" class="headerlink" title="3. 开发与提交"></a>3. 开发与提交</h2><p>在特性分支上进行开发，定期提交代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;提交信息：描述本次修改内容&quot;</span></span><br></pre></td></tr></table></figure><h2 id="4-同步远程仓库更新"><a href="#4-同步远程仓库更新" class="headerlink" title="4. 同步远程仓库更新"></a>4. 同步远程仓库更新</h2><blockquote><p><strong>在开发过程中，需定期从远程主分支获取最新代码并合并到本地，避免后续合并冲突!!</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin main</span><br><span class="line">git merge origin/main</span><br></pre></td></tr></table></figure><p>当然,上述的命令也可以通过一条命令实现:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><p>具体的步骤可以参考<a href="https://help.github.com/articles/syncing-a-fork/">GitHub帮助文档-Syncing a fork</a>。</p><h2 id="5-推送分支到远程仓库"><a href="#5-推送分支到远程仓库" class="headerlink" title="5. 推送分支到远程仓库"></a>5. 推送分支到远程仓库</h2><p>完成某段功能时，将本地分支推送到远程仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin feature-branch</span><br></pre></td></tr></table></figure><h2 id="6-创建-Pull-Request"><a href="#6-创建-Pull-Request" class="headerlink" title="6. 创建 Pull Request"></a>6. 创建 Pull Request</h2><p>在GitHub等平台上，从自己的特性分支向主分支发起Pull Request（PR）。</p><h2 id="7-代码审查"><a href="#7-代码审查" class="headerlink" title="7. 代码审查"></a>7. 代码审查</h2><p>团队成员审查PR中的代码变更，可提出修改建议或直接在网页上进行评论。</p><h2 id="8-修改与反馈"><a href="#8-修改与反馈" class="headerlink" title="8. 修改与反馈"></a>8. 修改与反馈</h2><p>根据审查意见，在本地修改代码后提交，并推送到远程分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment"># 添加修改</span></span><br><span class="line">git commit --amend <span class="comment"># 修改最近一次提交</span></span><br><span class="line">git push origin feature-branch --force-with-lease <span class="comment"># 强制推送，注意保护已有工作</span></span><br></pre></td></tr></table></figure><h2 id="9-合并-Pull-Request"><a href="#9-合并-Pull-Request" class="headerlink" title="9. 合并 Pull Request"></a>9. 合并 Pull Request</h2><p>审查通过后，项目管理员或有权限的成员合并PR到主分支。</p><h2 id="10-删除已合并的分支（可选）"><a href="#10-删除已合并的分支（可选）" class="headerlink" title="10. 删除已合并的分支（可选）"></a>10. 删除已合并的分支（可选）</h2><p>保持仓库整洁，合并后可考虑删除远程和本地的特性分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -d feature-branch</span><br><span class="line">git push origin --delete feature-branch</span><br></pre></td></tr></table></figure><h2 id="11-更新本地主分支"><a href="#11-更新本地主分支" class="headerlink" title="11. 更新本地主分支"></a>11. 更新本地主分支</h2><p>最后，拉取并合并最新的主分支到本地，为下一轮开发做准备。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><p>Git多人开发是较为复杂的话题,这里介绍一种基础的模式,即<code>Feature-branch</code>的模式,适合小型团队.进阶到大型团队,可能会需要更加深入的<code>Git flow</code>开发流.</p><p>多人协作开发时,主分支是公共的,所以需要使用分支来隔离开发。因此通常会创建开发分支。开发过程中,<strong>不断关注当前远程主分支的最新状态</strong>,减少发生合并冲突的可能.在本地完成开发</p><p>在本地开发完成后,再将本地分支推送到远程开发分支,申请合并到远程主分支即可。</p><h4 id="参考链接-Feature-branch开发流-GIT-FLOW开发流"><a href="#参考链接-Feature-branch开发流-GIT-FLOW开发流" class="headerlink" title="参考链接:Feature-branch开发流 GIT-FLOW开发流"></a>参考链接:<a href="https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow">Feature-branch开发流</a> <a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow">GIT-FLOW开发流</a></h4></blockquote><blockquote><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题:"></a>可能遇到的问题:</h3><ol><li><p><strong>冲突:</strong> 分支合并时,如果存在冲突,需要手动解决。这里我推荐使用<br>  IDE的Git工具,而不是git diff命令.它会自动提示冲突的位置,有更强的文本比对能力。也更加直观.以Jetbrains为例,相关的插件可以参考<a href="https://www.jetbrains.com/help/idea/git-plugin.html">Git插件</a>。</p></li><li><p>开发过程需要切换分支,但需要保留工作区的状态,可以使用<code>git stash</code>命令。具体可以参考<a href="https://www.atlassian.com/git/tutorials/git-stash">Git stash命令</a>。</p></li><li><p>另外强烈推荐一个Git命令的学习网站,它提供可视化的Git分支树示,方便理解Git的分支管理流程: <a href="https://git-school.github.io/visualizing-git/">Git-Visualize</a> or<br>  <a href="https://learngitbranching.js.org/?locale=zh_CN">Learning-git-branching</a>.根据我的经验,大约三四个小时可以刷完,通过项目中不断使用相信能有较好的掌握.</p></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> gitflow </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
